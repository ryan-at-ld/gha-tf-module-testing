name: Tag New Modules Versions
run-name: Tagging
on:
  pull_request:
    branches:
      - main

jobs:
  modified-version-files:
    runs-on: ubuntu-latest
    name: Find modified VERSION files
    outputs:
      matrix: ${{ steps.changed-version-files.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v4
      - name: Get changed version files
        id: changed-version-files
        uses: tj-actions/changed-files@4edd678ac3f81e2dc578756871e4d00c19191daf #v45
        with:
          matrix: true
          files: |
            resources/*/VERSION
            services/*/VERSION

  tag-modules:
    name: Create Git tag for modules with new versions
    runs-on: ubuntu-latest
    needs: [ modified-version-files ]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.modified-version-files.outputs.matrix) }}
      max-parallel: 2
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Parse version file
        id: parse-version-file
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('node:fs');

            try {

              const filename = '${{ matrix.files }}';
              const components = filename.split('/')
              const moduleName = components.slice(1,-1).join('/').toLowerCase();
              const moduleType = components[0];

              const version = fs.readFileSync(filename, 'utf8').trim();
              // TODO: Check for empty string and invalid characters
              const tag = `${moduleName}/${version}`.toLowerCase();

              core.setOutput(tag, 'tag');
              core.setOutput(moduleName, 'moduleName');
              core.setOutput(version, 'version');
            } catch (err) {
               core.setFailed(`Action failed with error ${err}`);
            }
      - name: Create release
        if: github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createRelease({
              body: '',
              name: '${{ steps.parse-version-file.outputs.moduleName }} ${{ steps.parse-version-file.outputs.version }}',
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.parse-version-file.outputs.tag }}',
              target_commitish: '',
            });
